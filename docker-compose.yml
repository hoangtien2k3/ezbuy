version: '3.9'

services:
  # postgresql:
  postgres:
    image: postgres:16.3
    container_name: postgres
    build: ./docker/postgres
    hostname: ${POSTGRES_HOSTNAME}
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./docker/postgres/postgresql.conf.sample:/usr/share/postgresql/postgresql.conf.sample
      - ./postgres_init.sql:/docker-entrypoint-initdb.d/postgres_init.sql
      - postgres:/var/lib/postgresql/data
    command: postgres -c 'max_connections=500'
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    networks:
      - ezbuy-network

  # pgadmin:
  pgadmin:
    image: dpage/pgadmin4:8.8
    container_name: pgadmin
    ports:
      - "${PGADMIN_LISTEN_PORT}:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
    networks:
      - ezbuy-network

  # keycloak:
  keycloak:
    image: keycloak/keycloak:25.0.2
    container_name: keycloak
    command: start-dev
    depends_on:
      - postgres
    ports:
      - "${KEYCLOAK_PORT}:8080"
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      # KC_DB: h2
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      # KC_PROXY_ADDRESS_FORWARDING: true
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      # KC_HTTP_ENABLED: true
      KC_HTTP_PORT: 8080
      KC_HTTPS_PORT: 8443
    volumes:
#      - ./docker/keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
      - ./docker/keycloak/themes/ezbuy/theme:/opt/keycloak/themes
    networks:
      - ezbuy-network

#  keycloak:
#    image: quay.io/keycloak/keycloak:25.0.2
#    restart: always
#    command: start
#    links:
#      - postgres
#    ports:
#      - "9082:8080"
#    depends_on:
#      - postgresql
#    environment:
#      - KC_PROXY_ADDRESS_FORWARDING=true
#      - KC_HOSTNAME_STRICT=false
#      - KC_HOSTNAME=keycloak.jimsgarage.co.uk
#      - KC_PROXY=edge
#      - KC_HTTP_ENABLED=true
#      - KC_DB=postgres
#      - KC_DB_USERNAME=keycloak
#      - KC_DB_PASSWORD=SUPERsecret
#      - KC_DB_URL_HOST=postgres
#      - KC_DB_URL_PORT=5432
#      - KC_DB_URL_DATABASE=keycloak
#      - KEYCLOAK_ADMIN=admin
#      - KEYCLOAK_ADMIN_PASSWORD=password
#    networks:
#      proxy:
#      keycloak:
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.keycloak.entrypoints=http"
#      - "traefik.http.routers.keycloak.rule=Host(`keycloak.yourdomain.com`)"
#      - "traefik.http.middlewares.keycloak-https-redirect.redirectscheme.scheme=https"
#      - "traefik.http.routers.keycloak.middlewares=keycloak-https-redirect"
#      - "traefik.http.routers.keycloak-secure.entrypoints=https"
#      - "traefik.http.routers.keycloak-secure.rule=Host(`keycloak.yourdomain.com`)"
#      - "traefik.http.routers.keycloak-secure.tls=true"
#      - "traefik.http.routers.keycloak-secure.service=keycloak"
#      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
#      - "traefik.docker.network=proxy"

  # minio
  minio:
    image: minio/minio:RELEASE.2024-08-03T04-33-23Z
    container_name: minio
    env_file: .env
    restart: always
    ports:
      - "${MINIO_PORT_1}:9000"
      - "${MINIO_PORT_2}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ./docker/minio/data:/data
    command: server /data --console-address ":9001"
    networks:
      - ezbuy-network

  # swagger-ui
  swagger-ui:
    image: swaggerapi/swagger-ui:v4.16.0
    environment:
      - BASE_URL=/swagger-ui
      - URLS
      - OAUTH_CLIENT_ID=swagger-ui
      - OAUTH_USE_PKCE=true
    networks:
      - ezbuy-network

  # zookeeper
  zookeeper:
    image: debezium/zookeeper:2.2
    restart: always
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    networks:
      - ezbuy-network

  # kafka
  kafka:
    image: confluentinc/cp-kafka:7.0.9
    hostname: ${KAFKA_SERVICE_HOST}
    depends_on:
      - zookeeper
    ports:
      - ${KAFKA_SERVICE_PORT}:${KAFKA_SERVICE_PORT}
      - 29092:29092
    environment:
      - KAFKA_BROKER_ID
      - KAFKA_ZOOKEEPER_CONNECT
      - KAFKA_ADVERTISED_LISTENERS
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
      - KAFKA_INTER_BROKER_LISTENER_NAME
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
    networks:
      - ezbuy-network

  # kafka-connect
  kafka-connect:
    image: debezium/connect:2.2
    restart: always
    ports:
      - 8083:8083
      - 5005:5005
    depends_on:
      - kafka
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=kafka_connect_configs
      - OFFSET_STORAGE_TOPIC=kafka_connect_offsets
    networks:
      - ezbuy-network

networks:
  ezbuy-network:
    driver: bridge
    name: ezbuy-network
    external: true
#  proxy:
#    external: true
#  keycloak:

volumes:
  postgres:
    driver: local
  pgadmin:
    driver: local
